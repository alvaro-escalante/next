{"version":3,"file":"static/webpack/static/development/pages/_app.js.d25aa33c3e91c48067ae.hot-update.js","sources":["webpack:///./components/Nav.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport Links from './Links'\nimport { caps, select, stripSlash, listen } from './Functions'\nimport router from 'next/router'\n\nconst pages = ['introduction', 'what', 'why', 'background', 'resources', 'builtvisible']\n\nexport default class Nav extends Component { \n\n  state = {\n    mobileMenu: false,\n    menuOpen: false\n  }\n\n  componentDidMount() {\n    this.setState({ mobileMenu: window.innerWidth <= 950 })\n    listen('on', window, 'resize', this.handleResize)\n  }\n\n  componentWillUnmount() {\n    listen('off', window, 'resize', this.handleResize)\n  }\n\n  // toggle mobile menu, Check that mobile width is true\n  mobileToggle = () => this.setState({ menuOpen: !this.state.menuOpen })\n  \n  // // Toggle mobile menu and check width\n  handleResize = () => this.setState({ menuOpen: false, mobileMenu: global.innerWidth <= 950 })\n\n  render() {\n\n    const {mobileMenu, menuOpen} = this.state\n\n    return(\n    <div class='nav-wrap'>\n    { mobileMenu ? \n      <div>\n        <div class='nav-trigger' onClick={this.mobileToggle}> <span></span> </div>\n        <span class='current'>\n          {router.pathname  === `/` ? pages[0] : stripSlash(router.pathname)}\n        </span>  \n      </div> \n    : null }\n      <div \n        onClick={this.mobileToggle}\n        class={mobileMenu && menuOpen? `nav-mobile` : `nav hide`}>\n        { pages.map(page => \n          <Links key={page} href={page === `introduction` ? `/` : `/${page}`} as={page} >\n          {caps(page)}\n          </Links>\n        )}\n      </div>\n    </div>\n    )\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAdA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAOA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAQA;;;;AA/CA;AACA;;;;;;A","sourceRoot":""}