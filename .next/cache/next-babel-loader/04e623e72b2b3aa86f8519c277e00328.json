{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport Links from './Links';\nimport { caps, select, stripSlash, listen } from './Functions';\nimport router from 'next/router';\nconst pages = ['introduction', 'what', 'why', 'background', 'resources', 'builtvisible'];\nexport default class Nav extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      mobileMenu: false,\n      menuOpen: false\n    });\n\n    _defineProperty(this, \"mobileToggle\", () => this.setState({\n      menuOpen: !this.state.menuOpen\n    }));\n\n    _defineProperty(this, \"handleResize\", () => this.setState({\n      menuOpen: false,\n      mobileMenu: global.innerWidth <= 950\n    }));\n  }\n\n  componentDidMount() {\n    this.setState({\n      mobileMenu: window.innerWidth <= 950\n    });\n    listen('on', window, 'resize', this.handleResize);\n  }\n\n  componentWillUnmount() {\n    listen('off', window, 'resize', this.handleResize);\n  } // toggle mobile menu, Check that mobile width is true\n\n\n  render() {\n    const {\n      mobileMenu,\n      menuOpen\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"nav-wrap\"\n    }, mobileMenu ? React.createElement(\"div\", null, React.createElement(\"div\", {\n      className: \"nav-trigger\",\n      onClick: this.mobileToggle\n    }, \" \", React.createElement(\"span\", null), \" \"), React.createElement(\"span\", {\n      className: \"current\"\n    }, router.pathname === `/` ? pages[0] : stripSlash(router.pathname))) : null, React.createElement(\"div\", {\n      onClick: this.mobileToggle,\n      className: mobileMenu && menuOpen ? `nav-mobile` : `nav hide`\n    }, pages.map(page => React.createElement(Links, {\n      href: page === `introduction` ? `/` : `/${page}`,\n      as: page,\n      key: page\n    }, caps(page)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Alvaro/Sites/react-next/components/Nav.jsx"],"names":["React","Component","Links","caps","select","stripSlash","listen","router","pages","Nav","mobileMenu","menuOpen","setState","state","global","innerWidth","componentDidMount","window","handleResize","componentWillUnmount","render","mobileToggle","pathname","map","page"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,UAAvB,EAAmCC,MAAnC,QAAiD,aAAjD;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,MAAMC,KAAK,GAAG,CAAC,cAAD,EAAiB,MAAjB,EAAyB,KAAzB,EAAgC,YAAhC,EAA8C,WAA9C,EAA2D,cAA3D,CAAd;AAEA,eAAe,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;;AAAA,mCAEjC;AACNS,MAAAA,UAAU,EAAE,KADN;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KAFiC;;AAAA,0CAiB1B,MAAM,KAAKC,QAAL,CAAc;AAAED,MAAAA,QAAQ,EAAE,CAAC,KAAKE,KAAL,CAAWF;AAAxB,KAAd,CAjBoB;;AAAA,0CAoB1B,MAAM,KAAKC,QAAL,CAAc;AAAED,MAAAA,QAAQ,EAAE,KAAZ;AAAmBD,MAAAA,UAAU,EAAEI,MAAM,CAACC,UAAP,IAAqB;AAApD,KAAd,CApBoB;AAAA;;AAOzCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,QAAL,CAAc;AAAEF,MAAAA,UAAU,EAAEO,MAAM,CAACF,UAAP,IAAqB;AAAnC,KAAd;AACAT,IAAAA,MAAM,CAAC,IAAD,EAAOW,MAAP,EAAe,QAAf,EAAyB,KAAKC,YAA9B,CAAN;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBb,IAAAA,MAAM,CAAC,KAAD,EAAQW,MAAR,EAAgB,QAAhB,EAA0B,KAAKC,YAA/B,CAAN;AACD,GAdwC,CAgBzC;;;AAMAE,EAAAA,MAAM,GAAG;AAEP,UAAM;AAACV,MAAAA,UAAD;AAAaC,MAAAA;AAAb,QAAyB,KAAKE,KAApC;AAEA,WACA;AAAK,MAAA,SAAK,EAAC;AAAX,OACEH,UAAU,GACV,iCACE;AAAK,MAAA,SAAK,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAE,KAAKW;AAAvC,YAAsD,iCAAtD,MADF,EAEE;AAAM,MAAA,SAAK,EAAC;AAAZ,OACGd,MAAM,CAACe,QAAP,KAAsB,GAAtB,GAA2Bd,KAAK,CAAC,CAAD,CAAhC,GAAsCH,UAAU,CAACE,MAAM,CAACe,QAAR,CADnD,CAFF,CADU,GAOV,IARF,EASE;AACE,MAAA,OAAO,EAAE,KAAKD,YADhB;AAEE,MAAA,SAAK,EAAEX,UAAU,IAAIC,QAAd,GAAyB,YAAzB,GAAwC;AAFjD,OAGIH,KAAK,CAACe,GAAN,CAAUC,IAAI,IACd,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEA,IAAI,KAAM,cAAV,GAA2B,GAA3B,GAAiC,IAAGA,IAAK,EAAtD;AAAyD,MAAA,EAAE,EAAEA,IAA7D;AAAmE,MAAA,GAAG,EAAEA;AAAxE,OACGrB,IAAI,CAACqB,IAAD,CADP,CADA,CAHJ,CATF,CADA;AAqBD;;AA/CwC","sourcesContent":["import React, { Component } from 'react'\nimport Links from './Links'\nimport { caps, select, stripSlash, listen } from './Functions'\nimport router from 'next/router'\n\nconst pages = ['introduction', 'what', 'why', 'background', 'resources', 'builtvisible']\n\nexport default class Nav extends Component { \n\n  state = {\n    mobileMenu: false,\n    menuOpen: false\n  }\n\n  componentDidMount() {\n    this.setState({ mobileMenu: window.innerWidth <= 950 })\n    listen('on', window, 'resize', this.handleResize)\n  }\n\n  componentWillUnmount() {\n    listen('off', window, 'resize', this.handleResize)\n  }\n\n  // toggle mobile menu, Check that mobile width is true\n  mobileToggle = () => this.setState({ menuOpen: !this.state.menuOpen })\n  \n  // // Toggle mobile menu and check width\n  handleResize = () => this.setState({ menuOpen: false, mobileMenu: global.innerWidth <= 950 })\n\n  render() {\n\n    const {mobileMenu, menuOpen} = this.state\n\n    return(\n    <div class='nav-wrap'>\n    { mobileMenu ? \n      <div>\n        <div class='nav-trigger' onClick={this.mobileToggle}> <span></span> </div>\n        <span class='current'>\n          {router.pathname  === `/` ? pages[0] : stripSlash(router.pathname)}\n        </span>  \n      </div> \n    : null }\n      <div \n        onClick={this.mobileToggle}\n        class={mobileMenu && menuOpen? `nav-mobile` : `nav hide`}>\n        { pages.map(page => \n          <Links href={page === `introduction` ? `/` : `/${page}`} as={page} key={page}>\n            {caps(page)}\n          </Links>\n        )}\n      </div>\n    </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}