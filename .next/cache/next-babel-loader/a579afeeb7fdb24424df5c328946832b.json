{"ast":null,"code":"// Helper functions to manipulate DOM, format numbers and debounce\nexport var // Select single element\nselect = function select(el) {\n  return document.querySelector(el);\n},\n    // Select Nodelist array of elements\nselectAll = function selectAll(els) {\n  return document.querySelectorAll(els);\n},\n    // Select elements by id\ngetId = function getId(id) {\n  return document.getElementById(id);\n},\n    // Capitalise string\ncaps = function caps(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n},\n    each = function each(array, callback) {\n  for (var i = 0, j = array.length; i < j; i++) {\n    callback.call(i, array[i]);\n  }\n},\n    rect = function rect(el) {\n  return el.getBoundingClientRect();\n},\n    offSet = function offSet(el) {\n  var rect = el.getBoundingClientRect();\n  return {\n    top: rect.top + window.pageYOffset,\n    left: rect.left + window.pageXOffset\n  };\n},\n    // Multi addEventListener, takes multiple parameters ('click load change etc')\nlisten = function listen(event, el, s, fn) {\n  event = event === 'on' ? 'addEventListener' : 'removeEventListener';\n  each(s.split(' '), function (e) {\n    return el[event](e, fn, false);\n  });\n},\n    stripSlash = function stripSlash(str) {\n  return str.replace(/^\\//, '').split('/')[0];\n};","map":{"version":3,"sources":["/Users/Alvaro/Sites/react-next/components/Functions.js"],"names":["select","el","document","querySelector","selectAll","els","querySelectorAll","getId","id","getElementById","caps","str","charAt","toUpperCase","slice","each","array","callback","i","j","length","call","rect","getBoundingClientRect","offSet","top","window","pageYOffset","left","pageXOffset","listen","event","s","fn","split","e","stripSlash","replace"],"mappings":"AAAA;AACA,OAAO,IACL;AACAA,MAAM,GAAO,SAAbA,MAAa,CAAAC,EAAE;AAAA,SAAKC,QAAQ,CAACC,aAAT,CAAuBF,EAAvB,CAAL;AAAA,CAFV;AAAA,IAGL;AACAG,SAAS,GAAI,SAAbA,SAAa,CAAAC,GAAG;AAAA,SAAIH,QAAQ,CAACI,gBAAT,CAA0BD,GAA1B,CAAJ;AAAA,CAJX;AAAA,IAKL;AACAE,KAAK,GAAQ,SAAbA,KAAa,CAAAC,EAAE;AAAA,SAAKN,QAAQ,CAACO,cAAT,CAAwBD,EAAxB,CAAL;AAAA,CANV;AAAA,IAOL;AACAE,IAAI,GAAS,SAAbA,IAAa,CAAAC,GAAG;AAAA,SAAIA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,GAAG,CAACG,KAAJ,CAAU,CAAV,CAAlC;AAAA,CARX;AAAA,IASLC,IAAI,GAAS,SAAbA,IAAa,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAChC,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCF,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C;AAA8CD,IAAAA,QAAQ,CAACI,IAAT,CAAcH,CAAd,EAAiBF,KAAK,CAACE,CAAD,CAAtB;AAA9C;AACD,CAXI;AAAA,IAYLI,IAAI,GAAS,SAAbA,IAAa,CAAArB,EAAE;AAAA,SAAIA,EAAE,CAACsB,qBAAH,EAAJ;AAAA,CAZV;AAAA,IAaLC,MAAM,GAAG,SAATA,MAAS,CAAAvB,EAAE,EAAI;AACb,MAAMqB,IAAI,GAAGrB,EAAE,CAACsB,qBAAH,EAAb;AACA,SAAO;AACLE,IAAAA,GAAG,EAAEH,IAAI,CAACG,GAAL,GAAWC,MAAM,CAACC,WADlB;AAELC,IAAAA,IAAI,EAAEN,IAAI,CAACM,IAAL,GAAYF,MAAM,CAACG;AAFpB,GAAP;AAID,CAnBI;AAAA,IAoBL;AACAC,MAAM,GAAO,SAAbA,MAAa,CAACC,KAAD,EAAQ9B,EAAR,EAAY+B,CAAZ,EAAeC,EAAf,EAAsB;AACjCF,EAAAA,KAAK,GAAGA,KAAK,KAAK,IAAV,GAAiB,kBAAjB,GAAsC,qBAA9C;AACAhB,EAAAA,IAAI,CAACiB,CAAC,CAACE,KAAF,CAAQ,GAAR,CAAD,EAAe,UAAAC,CAAC;AAAA,WAAIlC,EAAE,CAAC8B,KAAD,CAAF,CAAUI,CAAV,EAAaF,EAAb,EAAiB,KAAjB,CAAJ;AAAA,GAAhB,CAAJ;AACD,CAxBI;AAAA,IA0BLG,UAAU,GAAG,SAAbA,UAAa,CAAAzB,GAAG;AAAA,SAAIA,GAAG,CAAC0B,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,EAAuBH,KAAvB,CAA6B,GAA7B,EAAkC,CAAlC,CAAJ;AAAA,CA1BX","sourcesContent":["// Helper functions to manipulate DOM, format numbers and debounce\nexport const\n  // Select single element\n  select     = el  => document.querySelector(el),\n  // Select Nodelist array of elements\n  selectAll  = els => document.querySelectorAll(els),\n  // Select elements by id\n  getId      = id  => document.getElementById(id),\n  // Capitalise string\n  caps       = str => str.charAt(0).toUpperCase() + str.slice(1),\n  each       = (array, callback) => {\n    for (let i = 0, j = array.length; i < j; i++) callback.call(i, array[i])\n  },\n  rect       = el => el.getBoundingClientRect(),\n  offSet = el => {\n    const rect = el.getBoundingClientRect()\n    return {\n      top: rect.top + window.pageYOffset,\n      left: rect.left + window.pageXOffset,\n    }\n  },\n  // Multi addEventListener, takes multiple parameters ('click load change etc')\n  listen     = (event, el, s, fn) => {\n    event = event === 'on' ? 'addEventListener' : 'removeEventListener'\n    each(s.split(' '), e => el[event](e, fn, false))\n  },\n\n  stripSlash = str => str.replace(/^\\//, '').split('/')[0]"]},"metadata":{},"sourceType":"module"}