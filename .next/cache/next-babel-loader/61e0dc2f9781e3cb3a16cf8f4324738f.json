{"ast":null,"code":"// Helper functions to manipulate DOM, format numbers and debounce\nexport const // Select single element\nselect = el => document.querySelector(el),\n      // Select Nodelist array of elements\nselectAll = els => document.querySelectorAll(els),\n      // Select elements by id\ngetId = id => document.getElementById(id),\n      // Capitalise string\ncaps = str => str.charAt(0).toUpperCase() + str.slice(1),\n      each = (array, callback) => {\n  for (let i = 0, j = array.length; i < j; i++) callback.call(i, array[i]);\n},\n      rect = el => el.getBoundingClientRect(),\n      offSet = el => {\n  const rect = el.getBoundingClientRect();\n  return {\n    top: rect.top + window.pageYOffset,\n    left: rect.left + window.pageXOffset\n  };\n},\n      // Multi addEventListener, takes multiple parameters ('click load change etc')\nlisten = (event, el, s, fn) => {\n  event = event === 'on' ? 'addEventListener' : 'removeEventListener';\n  each(s.split(' '), e => el[event](e, fn, false));\n},\n      stripSlash = str => str.replace(/^\\//, '').split('/')[0];","map":{"version":3,"sources":["/Users/Alvaro/Sites/react-next/components/Functions.js"],"names":["select","el","document","querySelector","selectAll","els","querySelectorAll","getId","id","getElementById","caps","str","charAt","toUpperCase","slice","each","array","callback","i","j","length","call","rect","getBoundingClientRect","offSet","top","window","pageYOffset","left","pageXOffset","listen","event","s","fn","split","e","stripSlash","replace"],"mappings":"AAAA;AACA,OAAO,MACL;AACAA,MAAM,GAAOC,EAAE,IAAKC,QAAQ,CAACC,aAAT,CAAuBF,EAAvB,CAFf;AAAA,MAGL;AACAG,SAAS,GAAIC,GAAG,IAAIH,QAAQ,CAACI,gBAAT,CAA0BD,GAA1B,CAJf;AAAA,MAKL;AACAE,KAAK,GAAQC,EAAE,IAAKN,QAAQ,CAACO,cAAT,CAAwBD,EAAxB,CANf;AAAA,MAOL;AACAE,IAAI,GAASC,GAAG,IAAIA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,GAAG,CAACG,KAAJ,CAAU,CAAV,CAR7C;AAAA,MASLC,IAAI,GAAS,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAChC,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCF,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAA8CD,QAAQ,CAACI,IAAT,CAAcH,CAAd,EAAiBF,KAAK,CAACE,CAAD,CAAtB;AAC/C,CAXI;AAAA,MAYLI,IAAI,GAASrB,EAAE,IAAIA,EAAE,CAACsB,qBAAH,EAZd;AAAA,MAaLC,MAAM,GAAGvB,EAAE,IAAI;AACb,QAAMqB,IAAI,GAAGrB,EAAE,CAACsB,qBAAH,EAAb;AACA,SAAO;AACLE,IAAAA,GAAG,EAAEH,IAAI,CAACG,GAAL,GAAWC,MAAM,CAACC,WADlB;AAELC,IAAAA,IAAI,EAAEN,IAAI,CAACM,IAAL,GAAYF,MAAM,CAACG;AAFpB,GAAP;AAID,CAnBI;AAAA,MAoBL;AACAC,MAAM,GAAO,CAACC,KAAD,EAAQ9B,EAAR,EAAY+B,CAAZ,EAAeC,EAAf,KAAsB;AACjCF,EAAAA,KAAK,GAAGA,KAAK,KAAK,IAAV,GAAiB,kBAAjB,GAAsC,qBAA9C;AACAhB,EAAAA,IAAI,CAACiB,CAAC,CAACE,KAAF,CAAQ,GAAR,CAAD,EAAeC,CAAC,IAAIlC,EAAE,CAAC8B,KAAD,CAAF,CAAUI,CAAV,EAAaF,EAAb,EAAiB,KAAjB,CAApB,CAAJ;AACD,CAxBI;AAAA,MA0BLG,UAAU,GAAGzB,GAAG,IAAIA,GAAG,CAAC0B,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,EAAuBH,KAAvB,CAA6B,GAA7B,EAAkC,CAAlC,CA1Bf","sourcesContent":["// Helper functions to manipulate DOM, format numbers and debounce\nexport const\n  // Select single element\n  select     = el  => document.querySelector(el),\n  // Select Nodelist array of elements\n  selectAll  = els => document.querySelectorAll(els),\n  // Select elements by id\n  getId      = id  => document.getElementById(id),\n  // Capitalise string\n  caps       = str => str.charAt(0).toUpperCase() + str.slice(1),\n  each       = (array, callback) => {\n    for (let i = 0, j = array.length; i < j; i++) callback.call(i, array[i])\n  },\n  rect       = el => el.getBoundingClientRect(),\n  offSet = el => {\n    const rect = el.getBoundingClientRect()\n    return {\n      top: rect.top + window.pageYOffset,\n      left: rect.left + window.pageXOffset,\n    }\n  },\n  // Multi addEventListener, takes multiple parameters ('click load change etc')\n  listen     = (event, el, s, fn) => {\n    event = event === 'on' ? 'addEventListener' : 'removeEventListener'\n    each(s.split(' '), e => el[event](e, fn, false))\n  },\n\n  stripSlash = str => str.replace(/^\\//, '').split('/')[0]"]},"metadata":{},"sourceType":"module"}